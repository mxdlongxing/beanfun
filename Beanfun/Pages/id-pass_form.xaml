<Page
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      x:Class="Beanfun.id_pass_form"
      mc:Ignorable="d" 
      Title="id_pass_form">
    <Page.Resources>
        <ResourceDictionary>
            <Style TargetType="{x:Type Button}">
                <Setter Property="Background" Value="#7FF5F5F5"/>
                <Setter Property="Foreground" Value="Black"/>
            </Style>

            <SolidColorBrush x:Key="Button.Static.Default" Color="#848484"/>
            <SolidColorBrush x:Key="Button.Static.MouseOver" Color="#484848"/>
            <SolidColorBrush x:Key="Button.Static.Pressed" Color="#3AC3F7"/>
            <Style x:Key="TextButton" TargetType="{x:Type Button}">
                <Setter Property="Padding" Value="0"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="{x:Null}"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Foreground" Value="{StaticResource Button.Static.Default}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource Button.Static.MouseOver}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource Button.Static.Pressed}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Page.Resources>

    <Grid Margin="0 20 0 0">
        <StackPanel Margin="0 50 0 0" Background="#AAFFFFFF"/>
        <DockPanel>
            <Grid x:Name="SideBarLeft" MinWidth="90">
                <StackPanel VerticalAlignment="Bottom">
                    <Button Margin="10" Style="{StaticResource TextButton}" HorizontalAlignment="Left" Click="RegAcc_Click" Content="{DynamicResource RegisterAccount}"/>
                </StackPanel>
            </Grid>
            <StackPanel>
                <DockPanel>
                    <StackPanel>
                        <DockPanel>
                            <Button x:Name="gbtn" Margin="10" ToolTip="{DynamicResource GameChange}" Height="86" Width="86" Padding="0" Cursor="Hand" Click="Button_Click" DockPanel.Dock="Top">
                                <Button.Template >
                                    <ControlTemplate TargetType="{x:Type Button}" >
                                        <ContentPresenter Content="{TemplateBinding ContentControl.Content}" HorizontalAlignment="Center" VerticalAlignment="Center" ></ContentPresenter>
                                    </ControlTemplate>
                                </Button.Template>
                                <Button.Effect>
                                    <DropShadowEffect Opacity="0.7" ShadowDepth="0" BlurRadius="40" Color="White"/>
                                </Button.Effect>
                                <Border BorderBrush="#AAFFFFFF" BorderThickness="3" CornerRadius="{Binding ElementName=gbtn, Path=Width}" Width="{Binding ElementName=gbtn, Path=Width}" Height="{Binding ElementName=gbtn, Path=Height}">
                                    <Border.Background>
                                        <ImageBrush x:Name="imageGame" Stretch="UniformToFill"/>
                                    </Border.Background>
                                </Border>
                            </Button>
                            <StackPanel>
                                <ComboBox x:Name="t_AccountID" IsTextSearchEnabled="False" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Center" VerticalAlignment="Center" IsEditable="True" MinWidth="250" MinHeight="30" TextBoxBase.TextChanged="t_AccountID_TextChanged" GotFocus="t_AccountID_GotFocus" DropDownOpened="t_AccountID_DropDown" DropDownClosed="t_AccountID_DropDown" FontSize="16">
                                    <ComboBox.Resources>
                                        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
                                            <Setter Property="IsTabStop" Value="false"/>
                                            <Setter Property="Focusable" Value="false"/>
                                            <Setter Property="ClickMode" Value="Press"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <Border x:Name="templateRoot" BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" BorderThickness="0 0 0 1" SnapsToDevicePixels="true">
                                                            <TextBlock x:Name="splitBorder" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0">
                                                                <Path x:Name="arrow" Data="F1 M 0,0 L 4.667,4.66665 L 9.3334,0 L 9.3334,-1.78168 L 4.6667,2.88501 L0,-1.78168 L0,0 Z" Fill="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                                                            </TextBlock>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsPressed" Value="true">
                                                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource Button.Static.Pressed}"/>
                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource Button.Static.Pressed}"/>
                                                            </Trigger>
                                                            <Trigger Property="IsChecked" Value="true">
                                                                <Setter Property="Data" TargetName="arrow" Value="F1 M 0,0 L 4.667,-4.66665 L 9.3334,0 L 9.3334,1.78168 L 4.6667,-2.88501 L0,1.78168 L0,0 Z" />
                                                            </Trigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource Button.Static.Pressed}"/>
                                                            </MultiDataTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type TextBox}">
                                                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                                        <ControlTemplate.Triggers>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsFocused" Value="False"></Condition>
                                                                    <Condition Property="Text" Value=""></Condition>
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="PART_ContentHost">
                                                                    <Setter.Value>
                                                                        <VisualBrush AlignmentX="Left" Stretch="None">
                                                                            <VisualBrush.Visual>
                                                                                <TextBlock Opacity="0.5" Padding="5,0" Background="Transparent" FontSize="14" Text="{DynamicResource AcountOrEmail}"/>
                                                                            </VisualBrush.Visual>
                                                                        </VisualBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </MultiTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                        <Style TargetType="ComboBoxItem">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ComboBoxItem">
                                                        <Border Padding="5" Background="{TemplateBinding Background}">
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="*"/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                </Grid.ColumnDefinitions>
                                                                <TextBlock Grid.Column="0" VerticalAlignment="Center" Text="{TemplateBinding Content}" />
                                                                <Button Grid.Column="1" Style="{DynamicResource ButtonStyle}" VerticalAlignment="Center" VerticalContentAlignment="Center" Tag="{Binding}" Click="DeleteButton_Click" Content="×">
                                                                    <Button.Resources>
                                                                        <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
                                                                            <Setter Property="Foreground" Value="{StaticResource Button.Static.Default}"/>
                                                                            <Setter Property="Padding" Value="2"/>
                                                                            <Setter Property="BorderThickness" Value="0"/>
                                                                            <Setter Property="Background" Value="{x:Null}"/>
                                                                            <Setter Property="BorderBrush" Value="{x:Null}"/>
                                                                            <Setter Property="HorizontalAlignment" Value="Center"/>
                                                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                                                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                                                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                        </Border>
                                                                                        <ControlTemplate.Triggers>
                                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                                <Setter Property="Foreground" Value="{StaticResource Button.Static.MouseOver}"/>
                                                                                            </Trigger>
                                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                                <Setter Property="Foreground" Value="Red"/>
                                                                                            </Trigger>
                                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                                                            </Trigger>
                                                                                        </ControlTemplate.Triggers>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </Button.Resources>
                                                                </Button>
                                                            </Grid>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="true">
                                                    <Setter Property="Background" Value="LightGray"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
                                            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                                </Grid.ColumnDefinitions>
                                                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="3" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                                    <Border BorderBrush="{StaticResource Button.Static.Default}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                                        <ScrollViewer>
                                                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                        </ScrollViewer>
                                                    </Border>
                                                </Popup>
                                                <ToggleButton x:Name="toggleButton" Grid.ColumnSpan="3" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                                                <Path Grid.Column="0" Fill="{TemplateBinding BorderBrush}" Margin="5" Stretch="Uniform" RenderTransformOrigin="0.5,0.5" Width="20" Data="M1177 974 c-4 -4 -7 -18 -7 -30 0 -17 -7 -23 -27 -26 -39 -4 -39 -42 -1 -46 21 -3 27 -9 30 -30 2 -19 9 -27 23 -27 18 0 20 7 20 80 0 64 -3 80 -15 83 -9 1 -19 0 -23 -4z M1240 905 c-10 -11 -10 -19 -2 -27 15 -15 44 -2 40 19 -4 23 -22 27 -38 8z M98 840 c-178 -94 -100 -335 146 -455 145 -71 285 -90 438 -61 103 20 173 49 173 72 0 24 -3 24 -105 -10 -154 -52 -337 -39 -487 35 -76 36 -167 117 -195 173 -29 55 -29 126 -2 163 46 63 113 75 249 47 56 -12 80 -13 88 -5 19 19 -6 32 -84 47 -103 19 -176 17 -221 -6z M745 840 c-51 -11 -132 -19 -187 -20 -96 0 -123 -9 -99 -33 18 -18 190 -11 311 12 166 33 208 27 264 -39 65 -77 11 -203 -130 -306 -22 -17 -26 -25 -18 -34 19 -19 51 -3 113 58 68 68 93 117 99 194 5 68 -19 120 -75 158 -48 33 -152 36 -278 10z M394 660 c-61 -34 -77 -52 -72 -82 6 -43 85 -31 110 16 16 29 27 85 19 90 -4 3 -30 -8 -57 -24z M535 627 c-22 -83 -18 -102 20 -102 37 0 58 35 49 85 -6 38 -29 80 -43 80 -5 0 -16 -29 -26 -63z M675 643 c18 -59 45 -97 74 -101 27 -4 42 32 29 71 -11 30 -72 77 -100 77 -16 0 -16 -4 -3 -47z">
                                                    <Path.RenderTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform ScaleY="-1" ScaleX="1"/>
                                                            <SkewTransform AngleY="0" AngleX="0"/>
                                                            <RotateTransform Angle="0"/>
                                                            <TranslateTransform/>
                                                        </TransformGroup>
                                                    </Path.RenderTransform>
                                                </Path>
                                                <Border Grid.Column="1" x:Name="border" Background="Transparent" Margin="{TemplateBinding BorderThickness}">
                                                    <TextBox x:Name="PART_EditableTextBox" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Border>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                                                    <Setter Property="Foreground" Value="Black"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                        <Style TargetType="{x:Type ComboBox}">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
                                            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Default}"/>
                                            <Setter Property="Background" Value="{StaticResource Button.Static.Default}"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsEditable" Value="true">
                                                    <Setter Property="IsTabStop" Value="false"/>
                                                    <Setter Property="Padding" Value="2"/>
                                                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="true">
                                                    <Setter Property="BorderBrush" Value="{StaticResource Button.Static.MouseOver}"/>
                                                    <Setter Property="Background" Value="{StaticResource Button.Static.MouseOver}"/>
                                                </Trigger>
                                                <Trigger Property="IsDropDownOpen" Value="true">
                                                    <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Pressed}"/>
                                                    <Setter Property="Background" Value="{StaticResource Button.Static.Pressed}"/>
                                                </Trigger>
                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                    <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Pressed}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ComboBox.Resources>
                                </ComboBox>
                                <PasswordBox x:Name="t_Password" Margin="0,5,0,0" MinWidth="{Binding MinWidth, ElementName=t_AccountID}" MinHeight="{Binding MinHeight, ElementName=t_AccountID}" VerticalContentAlignment="Center" VerticalAlignment="Center" FontSize="16">
                                    <PasswordBox.Resources>
                                        <Style TargetType="{x:Type PasswordBox}">
                                            <Setter Property="PasswordChar" Value="●"/>
                                            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Default}"/>
                                            <Setter Property="BorderThickness" Value="0 0 0 1"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                                                        <Border Grid.Column="1" x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                    <ColumnDefinition Width="*"/>
                                                                </Grid.ColumnDefinitions>
                                                                <Path x:Name="lb_Lock" Fill="{TemplateBinding BorderBrush}" Margin="7 0 9 0" Stretch="Uniform" Width="14" Data="M790.3232 436.3264h-53.248v-57.6512c0-124.5184-101.888-226.4064-226.4064-226.4064s-226.4064 101.888-226.4064 226.4064l-0.512 57.6512h-50.176c-22.528 0-40.96 18.432-40.96 40.96v353.4848c0 22.528 18.432 40.96 40.96 40.96h556.6464c22.528 0 40.96-18.432 40.96-40.96V477.2864c0.1024-22.528-18.3296-40.96-40.8576-40.96z m-465.1008-57.7536c0-101.9904 83.456-185.4464 185.4464-185.4464s185.4464 83.456 185.4464 185.4464v57.7536H324.7104l0.512-57.7536z m465.1008 431.8208c0 11.264-9.216 20.48-20.48 20.48H254.1568c-11.264 0-20.48-9.216-20.48-20.48V497.5616c0-11.264 9.216-20.48 20.48-20.48h515.6864c11.264 0 20.48 9.216 20.48 20.48v312.832z M512 581.2224c-11.264 0-20.48 9.216-20.48 20.48v104.5504c0 11.264 9.216 20.48 20.48 20.48s20.48-9.216 20.48-20.48V601.7024c0-11.264-9.216-20.48-20.48-20.48z"/>
                                                                <ScrollViewer Grid.Column="1" x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                                            </Grid>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="true">
                                                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Static.MouseOver}"/>
                                                                <Setter Property="Fill" TargetName="lb_Lock" Value="{StaticResource Button.Static.MouseOver}"/>
                                                            </Trigger>
                                                            <Trigger Property="IsKeyboardFocused" Value="true">
                                                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Static.Pressed}"/>
                                                                <Setter Property="Fill" TargetName="lb_Lock" Value="{StaticResource Button.Static.Pressed}"/>
                                                                <Setter Property="Data" TargetName="lb_Lock" Value="M512 726.8352c-11.264 0-20.48-9.216-20.48-20.48V601.7024c0-11.264 9.216-20.48 20.48-20.48s20.48 9.216 20.48 20.48v104.5504c0 11.3664-9.216 20.5824-20.48 20.5824z M790.3232 436.3264H324.7104l0.512-57.7536c0-101.9904 83.456-185.4464 185.4464-185.4464 82.432 0 152.7808 54.5792 176.7424 129.3312 3.6864 11.3664 16.384 17.2032 27.4432 12.4928 9.728-4.096 14.7456-14.9504 11.5712-24.9856-29.2864-91.2384-115.0976-157.696-215.6544-157.696-124.5184 0-226.4064 101.888-226.4064 226.4064l-0.512 57.6512h-50.176c-22.528 0-40.96 18.432-40.96 40.96v353.4848c0 22.528 18.432 40.96 40.96 40.96h556.6464c22.528 0 40.96-18.432 40.96-40.96V477.2864c0-22.528-18.432-40.96-40.96-40.96z m0 374.0672c0 11.264-9.216 20.48-20.48 20.48H254.1568c-11.264 0-20.48-9.216-20.48-20.48V497.5616c0-11.264 9.216-20.48 20.48-20.48h515.6864c11.264 0 20.48 9.216 20.48 20.48v312.832z"/>
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsFocused" Value="False"/>
                                                                    <Condition Property="ExtentWidth" Value="0" SourceName="PART_ContentHost"/>
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="PART_ContentHost">
                                                                    <Setter.Value>
                                                                        <VisualBrush AlignmentX="Left" Stretch="None">
                                                                            <VisualBrush.Visual>
                                                                                <TextBlock Opacity="0.5" Padding="5,0" Background="Transparent" FontSize="14" Text="{DynamicResource Password_}"/>
                                                                            </VisualBrush.Visual>
                                                                        </VisualBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </MultiTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                                                        <Condition Property="IsSelectionActive" Value="false"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                                </MultiTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </PasswordBox.Resources>
                                </PasswordBox>
                            </StackPanel>
                        </DockPanel>
                    </StackPanel>
                </DockPanel>
                <Grid Margin="0,10,0,0" VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <CheckBox Grid.Column="0" x:Name="checkBox_RememberPWD" Content="{DynamicResource RememberPassword}" Margin="2" Foreground="{StaticResource Button.Static.Default}" BorderBrush="#FFB2B2B2" Unchecked="checkBox_RememberPWD_Unchecked"/>
                    <CheckBox Grid.Column="1" x:Name="checkBox_AutoLogin" Content="{DynamicResource AutoLogin}" Margin="2" Foreground="{StaticResource Button.Static.Default}" BorderBrush="#FFB2B2B2" Checked="checkBox_AutoLogin_Checked"/>
                    <Button Grid.Column="2" FontSize="12.5" Style="{StaticResource TextButton}" Margin="2" Click="FindPwd_Click" Content="{DynamicResource ForgotPassword}"/>
                </Grid>
                <Button x:Name="btn_login" Content="{DynamicResource Login}" Height="30" MinWidth="{Binding MinWidth, ElementName=t_AccountID}" FontWeight="Bold" Margin="0 10 0 20" Click="btn_login_Click" IsDefault="True" Background="#7FF5F5F5" Foreground="Black"/>
            </StackPanel>
            <Grid MinWidth="{Binding MinWidth, ElementName=SideBarLeft}">
                <StackPanel VerticalAlignment="Bottom">
                    <Button x:Name="btn_QRCode" Margin="10" Width="22" Height="22" HorizontalAlignment="Right" ToolTip="{DynamicResource QRCodeLogin}" Click="btn_QRCode_Click">
                        <Button.Resources>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="{x:Null}"/>
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <TextBlock>
                                                    <Path x:Name="Path" Fill="{TemplateBinding Foreground}" Stretch="Uniform" Data="M426.666667 0H42.666667A42.666667 42.666667 0 0 0 0 42.666667V426.666667a42.666667 42.666667 0 0 0 42.666667 42.666666H426.666667a42.666667 42.666667 0 0 0 42.666666-42.666666V42.666667A42.666667 42.666667 0 0 0 426.666667 0z m-42.666667 384H85.333333V85.333333h298.666667v298.666667z m42.666667 170.666667H42.666667A42.666667 42.666667 0 0 0 0 597.333333v384A42.666667 42.666667 0 0 0 42.666667 1024H426.666667a42.666667 42.666667 0 0 0 42.666666-42.666667V597.333333a42.666667 42.666667 0 0 0-42.666666-42.666666zM384 938.666667H85.333333V640h298.666667V938.666667z m597.333333-938.666667H597.333333a42.666667 42.666667 0 0 0-42.666666 42.666667V426.666667a42.666667 42.666667 0 0 0 42.666666 42.666666h384A42.666667 42.666667 0 0 0 1024 426.666667V42.666667A42.666667 42.666667 0 0 0 981.333333 0zM938.666667 384H640V85.333333H938.666667v298.666667zM170.666667 170.666667h128v128H170.666667V170.666667z m0 554.666666h128V853.333333H170.666667v-128z m725.333333-170.666666H1024V682.666667h-128v-128z m0 341.333333h-85.333333V1024H1024v-213.333333h-128v85.333333z m-341.333333 0H682.666667V1024h-128v-128z m170.666666-725.333333H853.333333v128h-128V170.666667z m-170.666666 384H682.666667V682.666667h-128v-128zM682.666667 682.666667h128v213.333333H682.666667V682.666667z"/>
                                             </TextBlock>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Foreground" Value="{StaticResource Button.Static.MouseOver}"/>
                                                    <Setter TargetName="Path" Property="Fill" Value="{StaticResource Button.Static.MouseOver}"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Foreground" Value="{StaticResource Button.Static.Pressed}"/>
                                                    <Setter TargetName="Path" Property="Fill" Value="{StaticResource Button.Static.Pressed}"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Foreground" Value="#CCCCCC"/>
                                                    <Setter TargetName="Path" Property="Fill" Value="#CCCCCC"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Resources>
                        <Button.Foreground>
                            <StaticResource ResourceKey="Button.Static.Default"/>
                        </Button.Foreground>
                    </Button>
                </StackPanel>
            </Grid>
        </DockPanel>
    </Grid>
</Page>
